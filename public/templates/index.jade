doctype html
html(lang='en')

  head
    meta(charset='utf-8')
    meta(http-equiv='X-UA-Compatible', content='IE=edge')
    meta(name='viewport', content='width=device-width, initial-scale=1')
    meta(name='description', content='css, html, code guide, style guide, front-end')
    meta(name='author', content='&yet')

    title &yet's team guide to writing sane and maintainable front-end

    link(rel='icon', type='image/png', href='/public/img/favicon.png')

    link(rel='stylesheet', href='//cloud.typography.com/7773252/674524/css/fonts.css')
    link(rel='stylesheet', href='public/css/normalize.min.css')
    link(rel='stylesheet', href='public/css/andlight.min.css')
    link(rel='stylesheet', href='public/css/main.min.css')

  body
    header(role='banner')
      .container
        .cf
          a(href='https://github.com/andyet/code-guide', title='See on Github', class='button button-primary pull-right') See on Github
        h1 &yet's Code Guide
        p Standards for writing sane and maintainable front-end systems

  .container

    section
      h2 Introduction
      p This guide has been written with the purpose of empowering members of <a href='http://andyet.com/team'>&yet</a> to write better front-end systems in <a href='http://jade-lang.com/'>Jade</a> and <a href='http://learnboost.github.io/stylus/'>Stylus</a>. It follows standard CSS conventions but also introduces preferential choices of our team. Feel free to treat it as an inspiration for writing your own code guides.

    section
      h2 Table of Contents
      .grid-container-flex

        .grid-flex-cell
          h3 HTML
          nav(role='navigation')
            ul
              li: a(href='#html-syntax') Syntax
              li: a(href='#encoding') Encoding
              li: a(href='#attributes') Attributes
              li: a(href='#tag-nesting') Tag Nesting
              li: a(href='#class-chaining') Class Chaining
              li: a(href='#semantics-and-accessibility') Semantics and Accessibility
              li: a(href='#boilerplate') HTML Boilerplate

        .grid-flex-cell
          h3 CSS
          nav(role='navigation')
            ul
              li: a(href='#css-syntax') Syntax
              li: a(href='#preprocessing') Preprocessing
              li: a(href='#declaration-order') Declaration Order
              li: a(href='#units-and-colors') Units and Colors
              li: a(href='#comments') Comments
              li: a(href='#specificity') Specificity
              li: a(href='#class-naming') Class Naming
              li: a(href='#media-queries') Media Queries
              li: a(href='#yeticss') Yeti.css

    section(id='html-syntax')
      h3 Syntax
      .grid-container-flex

        .grid-flex-cell
          ul
            li Use two spaces for indentation (here's how to set it up in <a href='http://www.sublimetext.com/docs/2/indentation.html'>Sublime Text</a>, <a href='http://manual.macromates.com/en/working_with_text'>Textmate</a> or <a href='http://www.emacswiki.org/emacs/NoTabs'>Emacs</a>). Nested elements should be indented once. 
            li Use single quotation marks for attributes.
            li Feel free to omit <a href='http://www.whatwg.org/specs/web-apps/current-work/multipage/syntax.html#syntax-tag-omission'>optional tags</a> but mind the code's readability.
            li Put spaces between major elements to improve readability (use your own judgement).

        .grid-flex-cell

          :markdown
            ```jade
            doctype html
            html(lang='en')

              head
                meta(charset='utf-8')
                meta(name='viewport', content='width=device-width, initial-scale=1')

                link(rel='stylesheet', href='css/main.min.css')
            ```

    section(id='encoding')
      h3 Encoding
      .grid-container-flex

        .grid-flex-cell
          p Use <code>UTF-8</code> encoding and custom characters instead of HTML entities. To access the list of characters hit <code>⌘+⌃+Space</code> (Command + Control + Space). This method of invoking special characters list might not work in certain apps like Sublime Text, but will work in Chrome or IM.

        .grid-flex-cell

          :markdown
            ```html
             head
                meta(charset='utf-8')
                title from &yet ❤︎
            ```

    section(id='attributes')
      h3 Attributes
      .grid-container-flex

        .grid-flex-cell
          ul
            li Omit <code>type</code> attributes in CSS and Javascript.
            li Omit values in <a href='http://www.whatwg.org/specs/web-apps/current-work/multipage/infrastructure.html#boolean-attributes'>boolean attributes</a>.
            li Comply to the following attribute order: <code>class</code>, <code>id</code>, <code>data-*</code>, <code>src</code>, <code>href</code>, <code>type</code>, <code>title</code>, <code>alt</code> and <code>role</code>.
        .grid-flex-cell

          :markdown
            ```html
            link(rel='stylesheet', href='css/main.min.css')
            input(class='form-input', type='text', required)
            a(class='button', href='/', title='A buttton')
            ```

    section(id='tag-nesting')
      h3 Tag Nesting

      .grid-container-flex

        .grid-flex-cell
          p Complying with Jade syntax in some cases means extensive use of <a href='http://jade-lang.com/reference/plain-text/'>piping</a> to separate plain text from nested tags (like <code>em</code> or <code>strong</code>).
          p To avoid unreadable and cumbersome markup use regular HTML tags.
          p For regular nesting scenarios use indentation or <a href='http://jade-lang.com/reference/tags/'>block expansion</a>.

        .grid-flex-cell

          :markdown
            ```html
            // Regular nesting
            ul 
              li
                a(href='#') Link
              li: a(href='#') Link

            // Good
            p A paragraph with <strong>emphasized text.</strong>

            // Bad
            p 
              | A paragraph with 
              strong emphasized text.
            ```

    section(id='class-chaining')
      h3 Class Chaining

      .grid-container-flex

        .grid-flex-cell
          p Decide on one method of adding classes to elements. Using the class attribute is preferred. 

        .grid-flex-cell

          :markdown
            ```html
            // Good
            a(class='list-item active', href='')
            a.list-item.active(href='')

            // Bad
            a.list-item(class='active', href='')
            ```

    section(id='semantics-and-accessibility')
      h3 Semantics and Accessibility

      .grid-container-flex
        .grid-flex-cell
          p For structuring content make use of new HTML5 <a href='http://blog.teamtreehouse.com/use-html5-sectioning-elements'>sectioning elements</a>.

          p Add basic <a href='http://alistapart.com/article/aria-and-progressive-enhancement/'>ARIA landmark roles</a> that increase accessibility by assigning meaning to specific areas of the page. Here's <a href='http://www.paciellogroup.com/blog/2013/02/using-wai-aria-landmarks-2013/'>a good rundown of roles</a> by Steve Faulkner. 
        .grid-flex-cell

          :markdown
            ```html
              header(role='banner')
                h1 This is a website
              main(role='main')
                p Main content of my site
              footer(role='contentinfo')
                p © 2014
            ```

    section(id='boilerplate')
      h3 Boilerplate
      p Feel free to use this bare-minimum and standard-compliant boilerplate as a starting point for templating → <a href='https://github.com/thefoxis/html-boilerplate/'>github.com/thefoxis/html-boilerplate</a>.

   footer(role='contentinfo')
      .container
        
        nav(role='navigation')
          ul.list-unstyled.list-inline
            li: a(href='https://github.com/andyet/code-guide') Github
            li: a(href='https://github.com/andyet/code-guide/releases') Releases
            li: a(href='https://github.com/andyet/code-guide/blob/gh-pages/CONTRIBUTING.md') Contributing

        p Designed and built by <a href='https://twitter.com/fox'>@fox</a>.
        p Maintained with invaluable help of <a href='https://github.com/andyet/code-guide/graphs/contributors'>contributors</a>.

        a(href='http://andyet.com/', class='logo')

    script(src='public/js/highlight.pack.js')
    script.
      hljs.configure({
        tabReplace: '  ',
        classPrefix: ''
      });
      hljs.initHighlightingOnLoad();